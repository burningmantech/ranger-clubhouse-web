diff --git a/node_modules/ember-ajax-fetch/.idea/.gitignore b/node_modules/ember-ajax-fetch/.idea/.gitignore
new file mode 100644
index 0000000..b58b603
--- /dev/null
+++ b/node_modules/ember-ajax-fetch/.idea/.gitignore
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
diff --git a/node_modules/ember-ajax-fetch/.idea/ember-ajax-fetch.iml b/node_modules/ember-ajax-fetch/.idea/ember-ajax-fetch.iml
new file mode 100644
index 0000000..24643cc
--- /dev/null
+++ b/node_modules/ember-ajax-fetch/.idea/ember-ajax-fetch.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/node_modules/ember-ajax-fetch/.idea/inspectionProfiles/Project_Default.xml b/node_modules/ember-ajax-fetch/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000..fdc459a
--- /dev/null
+++ b/node_modules/ember-ajax-fetch/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="TemplateLint" enabled="true" level="ERROR" enabled_by_default="true" />
+  </profile>
+</component>
\ No newline at end of file
diff --git a/node_modules/ember-ajax-fetch/.idea/modules.xml b/node_modules/ember-ajax-fetch/.idea/modules.xml
new file mode 100644
index 0000000..a0db6c0
--- /dev/null
+++ b/node_modules/ember-ajax-fetch/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ember-ajax-fetch.iml" filepath="$PROJECT_DIR$/.idea/ember-ajax-fetch.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/ember-ajax-fetch/.idea/workspace.xml b/node_modules/ember-ajax-fetch/.idea/workspace.xml
new file mode 100644
index 0000000..509832b
--- /dev/null
+++ b/node_modules/ember-ajax-fetch/.idea/workspace.xml
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="6ab9ba60-a1e2-4d18-82aa-dde441410103" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 3
+}]]></component>
+  <component name="ProjectId" id="2Yn8SiV3uN1ymiCnzmziTlFfZcX" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "node.js.detected.package.ember-template-lint": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.ember-template-lint": "/Users/lion/rangers/clubhouse2/web/node_modules/ember-ajax-fetch/node_modules/ember-template-lint",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="6ab9ba60-a1e2-4d18-82aa-dde441410103" name="Changes" comment="" />
+      <created>1701149984525</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1701149984525</updated>
+      <workItem from="1701149985558" duration="1272000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/ember-ajax-fetch/addon/mixins/fetch-request.js b/node_modules/ember-ajax-fetch/addon/mixins/fetch-request.js
index 2b69ea3..461a066 100644
--- a/node_modules/ember-ajax-fetch/addon/mixins/fetch-request.js
+++ b/node_modules/ember-ajax-fetch/addon/mixins/fetch-request.js
@@ -1,7 +1,5 @@
 import { A } from '@ember/array';
-import EmberError from '@ember/error';
 import Mixin from '@ember/object/mixin';
-import { assign } from '@ember/polyfills';
 import { get } from '@ember/object';
 import { isEmpty } from '@ember/utils';
 import fetch from 'fetch';
@@ -204,7 +202,7 @@ export default Mixin.create({
    * @return {object}
    */
   options(url, options = {}) {
-    options = assign({}, options);
+    options = Object.assign({}, options);
     options.url = this._buildURL(url, options);
     options.type = options.type || 'GET';
     options.dataType = options.dataType || 'json';
@@ -379,7 +377,7 @@ export default Mixin.create({
    */
   get(url) {
     if (arguments.length > 1 || url.indexOf('/') !== -1) {
-      throw new EmberError(
+      throw new Error(
         'It seems you tried to use `.get` to make a request! Use the `.request` method instead.'
       );
     }
@@ -409,7 +407,7 @@ export default Mixin.create({
    */
   _getFullHeadersHash(headers) {
     const classHeaders = get(this, 'headers');
-    return assign({}, classHeaders, headers);
+    return Object.assign({}, classHeaders, headers);
   },
 
   /**
